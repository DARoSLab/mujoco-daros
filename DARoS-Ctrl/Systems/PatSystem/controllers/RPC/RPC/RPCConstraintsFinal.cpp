//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: RPCConstraintsFinal.cpp
//
// MATLAB Coder version            : 3.2
// C/C++ source code generated on  : 05-Mar-2020 07:55:47
//

// Include Files
#include "RPCBounds.h"
#include "RPCConstraintJacobian.h"
#include "RPCConstraintJacobianFinal.h"
#include "RPCConstraintJacobianFinalSP.h"
#include "RPCConstraintJacobianSP.h"
#include "RPCConstraints.h"
#include "RPCConstraintsFinal.h"
#include "RPCCost.h"
#include "RPCCostGradient.h"
#include "RPCHeuristics.h"
#include "RPCInitialize.h"
#include "RPCLagrangianHessian.h"
#include "RPCLagrangianHessianFinal.h"
#include "RPCLagrangianHessianFinalSP.h"
#include "RPCLagrangianHessianSP.h"

// Function Definitions

//
// RPCCONSTRAINTSFINAL
//     CONSTRAINTS_FINAL = RPCCONSTRAINTSFINAL(IN1,IN2,IN3,IN4,IN5,IN6)
// Arguments    : const double in1[12]
//                const double in2[24]
//                const double in3[4]
//                const double in4[4]
//                const double in5[4]
//                const double in6[4]
//                double constraints_final[44]
// Return Type  : void
//
void RPCConstraintsFinal(const double in1[12], const double in2[24], const
  double in3[4], const double in4[4], const double in5[4], const double in6[4],
  double constraints_final[44])
{
  double t2;
  double t3;
  double t4;
  double t5;

  //     This function was generated by the Symbolic Math Toolbox version 7.1.
  //     05-Mar-2020 07:54:12
  t2 = in2[5] * in6[0];
  t3 = in2[11] * in6[1];
  t4 = in2[17] * in6[2];
  t5 = in2[23] * in6[3];
  memset(&constraints_final[0], 0, 12U * sizeof(double));
  constraints_final[12] = -in3[0] * in4[0] * ((in2[2] + in1[2]) - in5[0]);
  constraints_final[13] = -in3[1] * in4[1] * ((in2[8] + in1[2]) - in5[1]);
  constraints_final[14] = -in3[2] * in4[2] * ((in2[14] + in1[2]) - in5[2]);
  constraints_final[15] = -in3[3] * in4[3] * ((in2[20] + in1[2]) - in5[3]);
  memset(&constraints_final[16], 0, 12U * sizeof(double));
  constraints_final[28] = in3[0] * (in2[3] - in2[5] * in6[0]);
  constraints_final[29] = -in3[0] * (in2[3] + t2);
  constraints_final[30] = in3[0] * (in2[4] - t2);
  constraints_final[31] = -in3[0] * (in2[4] + t2);
  constraints_final[32] = in3[1] * (in2[9] - in2[11] * in6[1]);
  constraints_final[33] = -in3[1] * (in2[9] + t3);
  constraints_final[34] = in3[1] * (in2[10] - t3);
  constraints_final[35] = -in3[1] * (in2[10] + t3);
  constraints_final[36] = in3[2] * (in2[15] - in2[17] * in6[2]);
  constraints_final[37] = -in3[2] * (in2[15] + t4);
  constraints_final[38] = in3[2] * (in2[16] - t4);
  constraints_final[39] = -in3[2] * (in2[16] + t4);
  constraints_final[40] = in3[3] * (in2[21] - in2[23] * in6[3]);
  constraints_final[41] = -in3[3] * (in2[21] + t5);
  constraints_final[42] = in3[3] * (in2[22] - t5);
  constraints_final[43] = -in3[3] * (in2[22] + t5);
}

//
// File trailer for RPCConstraintsFinal.cpp
//
// [EOF]
//
